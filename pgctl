#!/bin/sh

PG_SUBSYSTEM="/dev/polygator/subsystem"

START_ORDER=0

SERIAL_PORT_MAIN=0
SERIAL_PORT_AUX=1

BAUDRATE=115200

pg_channel_pwr ()
{
cat >> $1 << EOF
$2 PWR=$3
EOF
}

pg_channel_key ()
{
cat >> $1 << EOF
$2 KEY=$3
EOF
}

pg_channel_baudrate ()
{
cat >> $1 << EOF
$2 BAUDRATE=$3
EOF
}

pg_channel_serial_port ()
{
cat >> $1 << EOF
$2 SERIAL=$3
EOF
}

pg_enable_channel ()
{

if [ -c $1 ]; then

	sleep ${START_ORDER}

	echo "enable channel" $2

	pg_channel_baudrate $1 $2 ${BAUDRATE}
	pg_channel_serial_port $1 $2 ${SERIAL_PORT_MAIN}
	pg_channel_pwr $1 $2 1
	sleep 3

	while [ 1 ]; do

		pg_channel_key $1 $2 1
		sleep 2
		pg_channel_key $1 $2 0

		WAIT_COUNT=8
		while (( WAIT_COUNT > 0 )); do

			VIO=`cat $1 | grep $2 | awk -F ' ' '{print $6}' | sed 's/VIO=//g' | sed 's/[\r\n]//g'`
			if [ "${VIO}" = "1" ]; then
				break
			fi
			sleep 1
			WAIT_COUNT=`expr ${WAIT_COUNT} - 1`

		done

		VIO=`cat $1 | grep $2 | awk -F ' ' '{print $6}' | sed 's/VIO=//g' | sed 's/[\r\n]//g'`
		if [ "${VIO}" = "1" ]; then
			break
		fi

	done

else
	echo "board" $1 "not found"
fi

}

pg_disable_channel ()
{

if [ -c $1 ]; then

	echo "disable channel" $2

	VIO=`cat $1 | grep $2 | awk -F ' ' '{print $6}' | sed 's/VIO=//g' | sed 's/[\r\n]//g'`
	if [ "${VIO}" = "1" ]; then

		while [ 1 ]; do

			pg_channel_key $1 $2 1
			sleep 2
			pg_channel_key $1 $2 0

			WAIT_COUNT=8
			while (( WAIT_COUNT > 0 )); do

				VIO=`cat $1 | grep $2 | awk -F ' ' '{print $6}' | sed 's/VIO=//g' | sed 's/[\r\n]//g'`
				if [ "${VIO}" = "0" ]; then
					break
				fi
				sleep 1
				WAIT_COUNT=`expr ${WAIT_COUNT} - 1`

			done

			VIO=`cat $1 | grep $2 | awk -F ' ' '{print $6}' | sed 's/VIO=//g' | sed 's/[\r\n]//g'`
			if [ "${VIO}" = "0" ]; then
				break
			fi

		done

		pg_channel_pwr $1 $2 0

	fi

else
	echo "board" $1 "not found"
fi

}

pg_enable ()
{

	if [ "$1" = "all" ]; then

		for BOARD in ${PG_BOARD_LIST}; do

			BOARD_NAME=`printf ${BOARD} | sed 's/polygator\///g'`
			BOARD_PATH=`printf "/dev/%s" ${BOARD}`

			if [ -c ${BOARD_PATH} ]; then

				echo "enable all channel on" ${BOARD_NAME}

				BOARD_CHANNEL_LIST=`cat ${BOARD_PATH} | grep GSM | awk -F ' ' '{print $1}' | sed 's/!/\//g' | sed 's/[\r\n]//g'`

				for CHANNEL in ${BOARD_CHANNEL_LIST}; do
					pg_enable_channel ${BOARD_PATH} ${CHANNEL} ${START_ORDER} &
					START_ORDER=`expr ${START_ORDER} + 1`
				done

				wait

			else
				echo "board" ${BOARD_PATH} "not found"
			fi

		done

	elif [ "$1" = "channel" ]; then

		for BOARD in ${PG_BOARD_LIST}; do

			BOARD_PATH=`printf "/dev/%s" ${BOARD}`

			if [ -c ${BOARD_PATH} ]; then
				BOARD_POSITION=`cat ${BOARD_PATH} | grep POSITION | sed 's/POSITION=//g' | sed 's/[\r\n]//g'`
				if [ "$2" = "${BOARD}" ]; then
					pg_enable_channel ${BOARD_PATH} GSM$3 ${START_ORDER} &
					START_ORDER=`expr ${START_ORDER} + 1`
					wait
				elif [ "$2" = "${BOARD_POSITION}" ]; then
					pg_enable_channel ${BOARD_PATH} GSM$3 ${START_ORDER} &
					START_ORDER=`expr ${START_ORDER} + 1`
					wait
				fi
			fi

		done

	else

		echo "Usage: pgctl enable {all|channel}"
		exit 1

	fi

}

pg_disable ()
{

	if [ "$1" = "all" ]; then

		for BOARD in ${PG_BOARD_LIST}; do

			BOARD_NAME=`printf ${BOARD} | sed 's/polygator\///g'`
			BOARD_PATH=`printf "/dev/%s" ${BOARD}`

			if [ -c ${BOARD_PATH} ]; then

				echo "disable all channel on" ${BOARD_NAME}

				BOARD_CHANNEL_LIST=`cat ${BOARD_PATH} | grep GSM | awk -F ' ' '{print $1}' | sed 's/!/\//g' | sed 's/[\r\n]//g'`

				for CHANNEL in ${BOARD_CHANNEL_LIST}; do
					pg_disable_channel ${BOARD_PATH} ${CHANNEL} &
				done

				wait

			else
				echo "board" ${BOARD_PATH} "not found"
			fi

		done

	elif [ "$1" = "channel" ]; then

		for BOARD in ${PG_BOARD_LIST}; do

			BOARD_PATH=`printf "/dev/%s" ${BOARD}`

			if [ -c ${BOARD_PATH} ]; then
				BOARD_POSITION=`cat ${BOARD_PATH} | grep POSITION | sed 's/POSITION=//g' | sed 's/[\r\n]//g'`
				if [ "$2" = "${BOARD}" ]; then
					pg_disable_channel ${BOARD_PATH} GSM$3 &
					wait
				elif [ "$2" = "${BOARD_POSITION}" ]; then
					pg_disable_channel ${BOARD_PATH} GSM$3 &
					wait
				fi
			fi

		done

	else

		echo "Usage: pgctl disable {all|channel}"
		exit 1

	fi
}

	for BOARD in ${PG_BOARD_LIST}; do

		BOARD_PATH=`printf "/dev/%s" ${BOARD}`

		if [ -c ${BOARD_PATH} ]; then

			BOARD_POSITION=`cat ${BOARD_PATH} | grep POSITION | sed 's/POSITION=//g' | sed 's/[\r\n]//g'`

		else
			BOARD_POSITION=""
		fi

	done

if [ -c  ${PG_SUBSYSTEM} ]; then

	echo "Polygator subsytem kernel module loaded"

	PG_BOARD_LIST=`cat ${PG_SUBSYSTEM} | grep board | awk -F ' ' '{print $2}' | sed 's/!/\//g' | sed 's/[\r\n]//g'`

else

	echo "Polygator subsytem kernel module not loaded"

	exit 1

fi

case "$1" in
    enable)
	pg_enable $2 $3 $4
	exit $?
	;;
    disable)
	pg_disable $2 $3 $4
	exit $?
	;;
    *)
	echo "Usage: pgctl {enable|disable}"
	exit 1
esac
